/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetable.gui;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import timetable.model.TaskPriority;
import timetable.model.Task;
import timetable.callback.TaskActionListener.ModifyTaskActionListener;
import timetable.helper.JOptionPaneHelper;
import timetable.manager.DatabaseManager;
import timetable.model.Subject;


public class ModifyTask extends javax.swing.JDialog {

    private ModifyTaskActionListener taskActionListener;
    private final DefaultComboBoxModel<Subject> taskSubjectModel;

    /**
     * Creates new form AddTask
     *
     * @param parent the Parent window
     * @param modal prohibit focusing on the parent window if value is true
     */
    public ModifyTask(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.taskSubjectModel = new DefaultComboBoxModel<>();
        this.taskSubject.setModel(this.taskSubjectModel);
        List<Subject> allSubjects = DatabaseManager.getInstance().getAllSubjects();
        if (allSubjects != null) {
            for (int i = 0; i < allSubjects.size(); i++) {
                this.taskSubjectModel.addElement(allSubjects.get(i));
            }
        }
    }

    /**
     * This method is used to get the reference of the parent view
     *
     * @param taskActionListener (The view reference)
     */
    public void setTaskActionListener(ModifyTaskActionListener taskActionListener) {
        this.taskActionListener = taskActionListener;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        taskName = new javax.swing.JTextField();
        taskDate = new datechooser.beans.DateChooserCombo();
        taskPriority = new javax.swing.JComboBox<>();
        taskSubject = new javax.swing.JComboBox<>();
        updateTaskButton = new javax.swing.JButton();
        deleteTaskButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        taskID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Task name:");

        jLabel2.setText("Submission date:");

        jLabel3.setText("Priority:");

        jLabel4.setText("Subject:");

        taskPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low", "Medium", "High" }));

        updateTaskButton.setText("Update Task");
        updateTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTaskButtonActionPerformed(evt);
            }
        });

        deleteTaskButton.setText("Delete Task");
        deleteTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTaskButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Task ID:");

        taskID.setEditable(false);
        taskID.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 118, Short.MAX_VALUE)
                        .addComponent(deleteTaskButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateTaskButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel3))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel1))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(taskPriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(taskSubject, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(taskDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(taskName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(taskID))
                        .addGap(3, 3, 3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(taskName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(taskDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(taskPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(taskSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTaskButton)
                    .addComponent(deleteTaskButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTaskButtonActionPerformed
        String taskNameValue = this.taskName.getText();
        if (taskNameValue.isEmpty()) {
            JOptionPaneHelper.showWarningMessage(this, "Please specify a task name", "Error Occured");
            return;
        }
        if (this.taskActionListener != null) {
            Task task = new Task();
            task.setTaskID(Integer.parseInt(this.taskID.getText()));
            task.setTaskName(taskNameValue);
            task.setTaskDate(taskDate.getText());
            task.setTaskPriority(TaskPriority.getPriority(taskPriority.getSelectedIndex()));
            task.setTaskSubject(String.valueOf(taskSubject.getSelectedItem()));
            this.taskActionListener.onTaskUpdated(task);
            dispose();
        }
    }//GEN-LAST:event_updateTaskButtonActionPerformed

    private void deleteTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTaskButtonActionPerformed
        if (this.taskActionListener != null) {
            int showConfirmationMessage = JOptionPaneHelper.showConfirmationMessage(this, "Are you sure to delete?", "Delete Task");
            if (showConfirmationMessage == 0) {
                this.taskActionListener.onTaskDeleted(Integer.parseInt(this.taskID.getText()));
                dispose();
            }
        }
    }//GEN-LAST:event_deleteTaskButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private javax.swing.JButton deleteTaskButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private datechooser.beans.DateChooserCombo taskDate;
    private javax.swing.JTextField taskID;
    private javax.swing.JTextField taskName;
    private javax.swing.JComboBox<String> taskPriority;
    private javax.swing.JComboBox<Subject> taskSubject;
    private javax.swing.JButton updateTaskButton;
    // End of variables declaration//GEN-END:variables

    public void setSelectedTask(Task selectedTask) {
        this.taskID.setText(String.valueOf(selectedTask.getTaskID()));
        this.taskName.setText(selectedTask.getTaskName());
        this.taskDate.setText(selectedTask.getTaskDate());
        this.taskPriority.setSelectedIndex(selectedTask.getTaskPriority().getPriority());
        List<Subject> allSubjects = DatabaseManager.getInstance().getAllSubjects();
        if (allSubjects != null) {
            for (int i = 0; i < allSubjects.size(); i++) {
                Subject subject = allSubjects.get(i);
                if (subject != null && subject.toString() != null && subject.toString().equals(selectedTask.getTaskSubject())) {
                    this.taskSubject.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
}
